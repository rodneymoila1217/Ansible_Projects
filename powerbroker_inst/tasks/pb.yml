# Powerbroker Installation tasks
---
- name: Run pbtest to check if the server has powerbroker installed already
  command: pbrun pbtest
  become: yes
  register: pb_out
  when: ansible_domain == "corp.dsarena.com" or ansible_domain == "ocorp.dsarena.com" 
  tags: install PBIS
  ignore_errors: yes

#- debug: var="pb_out.stdout_lines"

- name: Ensure PowerBroker is NOT Installed before installation
  fail: msg="PBIS is already installed"
  failed_when: "'command not found' not in pb_out.stdout_lines"
  tags: install PBIS
  ignore_errors: yes

- name: Extract pbis-agents.tar into /tmp
  unarchive:
    src: defaults/files/pbis-agents.tar
    dest: /tmp
  tags: install PBIS
  when: ansible_domain == "corp.dsarena.com" or ansible_domain == "ocorp.dsarena.com" and 
        'command not found' in pb_out.stdout_lines

- name: Make the script executable
  file:
    path: /tmp/agents/linux.rpm.x64/sfx/pbis-enterprise-8.5.5.363.linux.x86_64.rpm.sh
    state: file
    owner: root
    group: root
    mode: 744
  tags: install PBIS

- name: Make the script executable
  file:
    path: /tmp/agents/linux.rpm.x64/sfx/pbis-enterprise-8.5.5.363.linux.x86_64.rpm.sh
    state: file
    owner: root
    group: root
    mode: 744
  tags: install PBIS

- name: Run pbis script
  command: ./pbis-enterprise-8.5.5.363.linux.x86_64.rpm.sh install chdir=/tmp/agents/linux.rpm.x64/sfx/
  tags: install PBIS

- name: Clean pbis-agents in /tmp
  file:
    path: /tmp/agents
    state: absent
  tags: install PBIS

- name: Extract pbutils.tar into /tmp
  unarchive:
    src: defaults/files/pbutils.tar
    dest: /tmp
  tags: install PBIS

- name: Copy pb. files from pbutils to /etc
  command: cp '{{ item }}' /etc chdir=/tmp/pbutils
  with_items: '{{ pbsettings }}'
  tags: install PBIS

- name: Modify pb.key file permissions
  file:
    path: /etc/pb.key
    state: file
    owner: root
    group: root
    mode: 400
  tags: install PBIS

- name: Modify pb.cfg file permissions
  file:
    path: /etc/pb.cfg
    state: file
    owner: root
    group: root
    mode: 600
  tags: install PBIS

- name: Modify pb.settings file permissions
  file:
    path: /etc/pb.settings
    state: file
    owner: root
    group: root
    mode: 600
  tags: install PBIS

- name: Clean pbutils in /tmp
  file:
    path: /tmp/pbutils
    state: absent
  tags: install PBIS

- name: Extract pbul_linux.x86-64_9.4.5-10.tar.Z into /tmp
  unarchive:
    src: defaults/files/pbul_linux.x86-64_9.4.5-10.tar.Z
    dest: /tmp
  tags: install PBIS

- name: Install Powerbroker
  command: ./pbinstall -b chdir=/tmp/powerbroker/v9.4/pbul_linux.x86-64_9.4.5-10/install
  tags: install PBIS

- name: Add btfunc user
  user:
    name: btfunc
    comment: "BT Func user"
    shell: /bin/bash
    append: yes
  tags: btfunc user

- name: setup tbfunc password
  user:
    state: present
    name: btfuncTest
    comment: "Bt Func"
    groups: test1,test2
    update_password: always
    password: "{{ btfunc_pass }}"
  tags: btfunc user

- name: Create btfunc .ssh directory
  file:
    path: /home/btfunc/.ssh/
    state: directory
    owner: btfunc
    group: btfunc
    mode: 0700
  tags: btfunc user

- name: touch btfunc authorized_keys file
  file:
    path: /home/btfunc/.ssh/authorized_keys
    state: touch
    owner: btfunc
    group: btfunc
    mode: 0400
  tags: btfunc user

- name: Set authorized key in /home/btfunc/.ssh/authorized_keys
  authorized_key:
      user: root
      state: present
      path: /home/btfunc/.ssh/authorized_keys
      key: '{{ btfunc_Key }}'
      exclusive: True
  tags: btfunc user

- name: Ensure /etc/resolve.conf has the correct DN Servers
  template:
    src: templates/resolve.conf.j2
    dest: /etc/resolve.conf
    owner: root
    group: root
    mode: 0600
  tags: btfunc user

- name: check if the server is already joined to the domain
  command: domainjoin-cli query
  register: domainjoin_test
  when: ansible_domain == "corp.dsarena.com" or ansible_domain == "ocorp.dsarena.com"
  tags: domain join

- name: Join the machine to corp domain
  command: domainjoin-cli join --ou "OU=Staging,OU=CORP Accounts,DC=corp,DC=dsarena,DC=com" \
           corp.dsarena.com SVC-PBIS-JoinDom '{{ dpassC }}'
  when: ansible_domain == "corp.dsarena.com" and 'Domain = CORP.DSARENA.COM' not in domainjoin_test.stdout
  register: cmd_out
  tags: domain join

- name: Join the machine to ocorp domain
  command: domainjoin-cli join --ou "OU=NonMS,OU=Resources,OU=OCORP Accounts,DC=ocorp,DC=dsarena,DC=com" \
           ocorp.dsarena.com SVC-PBIS-JoinDom '{{ dpassOc }}'
  when: ansible_domain == "ocorp.dsarena.com" and 'Domain = OCORP.DSARENA.COM' not in domainjoin_test.stdout
  register: cmd_out
  tags: domain join

